name: Build and install ansible collection
description: Build and install ansible collection

inputs:
  collection_namespace:
    description: "Install collection python dependencies"
    required: true
  collection_name:
    description: "Path to the collection source"
    required: true
  collection_version:
    description: The final collection path
    required: false
outputs:
  tar_file:
    description: The collection tarball when built
    value: ${{ steps.keys.outputs.namespace }}-${{ steps.keys.outputs.name }}-${{ steps.keys.outputs.version }}.tar.gz
  collection_path:
    description: The final collection path
    value: /home/runner/collections/ansible_collections/${{ steps.keys.outputs.namespace }}/${{ steps.keys.outputs.name }}

runs:
  using: composite
  steps:
    - name: template galaxy file
      run: ansible all -i local -m template -a "src=galaxy.yml.j2 dest=galaxy.yml"
      shell: bash

    - name: Extract metadata from galaxy.yml
      id: keys
      run: |
        echo "::set-output name=namespace::$(yq -r '.namespace' 'galaxy.yml')"
        echo "::set-output name=name::$(yq -r '.name' 'galaxy.yml')"
        echo "::set-output name=version::$(yq -r '.version' 'galaxy.yml')"
        echo "::set-output name=dependency::$(yq -r '.dependencies | keys | join(" ")' 'galaxy.yml')"
      shell: bash
      working-directory: ${{ inputs.source_path }}

    - name: Build collection
      run: ansible-galaxy collection build -vvv
      shell: bash
      working-directory: ${{ inputs.source_path }}

    - name: Install collection
      run: ansible-galaxy collection install ./${{ collection_namespace }}-${{ collection_name }}-${{ collection_version }}.tar.gz -p /home/runner/collections
      shell: bash
      working-directory: ${{ inputs.source_path }}